// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

// prisma/schema.prisma
datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  // uncomment next line if you use Prisma <5.10
  directUrl = env("DATABASE_URL_UNPOOLED")
}

model Employee {
  id        Int      @id @default(autoincrement())
  name      String
  email     String   @unique
  role      Role
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum Role {
  INTERN
  ENGINEER
  ADMIN
}

model User {
  id          Int          @id @default(autoincrement())
  username    String       @unique
  displayname String?      @default("")
  userSetting UserSetting? //one to one relation with the UserSetting
  posts       Post[] // one to many relation with the Post
  groupPosts  UserOnGroupPosts[] // Many to Many relation with the GroupPost  using UserOnGroupPosts Junction Table
}

model UserSetting {
  id               Int     @id @default(autoincrement())
  notificationIsOn Boolean
  smsEnabled       Boolean
  user             User    @relation(fields: [userId], references: [id]) //one to one relation with the User
  userId           Int     @unique
}

model Post {
  id          Int    @id @default(autoincrement())
  title       String
  description String
  user        User   @relation(fields: [userId], references: [id]) //one to many relation with the User
  userId      Int
}

// Junction table | hold primary keys of the tables that we want to relate with each other
// @@id is multifield IDs required for the Junction table of Many to Many relationship
model UserOnGroupPosts{
  user User @relation(fields: [userId], references: [id]) // Many to Many relation reference for User
  userId Int 
  groupPost GroupPost @relation(fields: [groupPostId], references: [id]) // Many to Many relation reference for GroupPost
  groupPostId Int

  @@id([userId, groupPostId]) // multifield IDs
}

model GroupPost {
  id Int  @id @default(autoincrement())
  title String 
  description String 
  users UserOnGroupPosts[] // Many to Many Relation with the Users using UserOnGroupPosts Junction Table
}

model Staff {
  id Int  @id @default(autoincrement())
  name String
  email String @unique
  password String 
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}